import React from "react";
    // import DOMPurify from "dompurify";

    export default function OrgChart() {
      const [msg, setMsg] = React.useState({ res: null });
      React.useEffect(() => {
        const res =
          '<style>* {margin: 0; padding: 0;} +.borderInc {border: 4px solid black;}.tree ul { display:table; margin:0 auto;}.tree ul {    padding-top: 20px; position: relative;\ttransition: all 0.5s;\t-webkit-transition: all 0.5s;\t-moz-transition: all 0.5s;}.tree li {\tfloat: left; text-align: center;\tlist-style-type: none;\tposition: relative;\tpadding: 20px 5px 0 5px;\ttransition: all 0.5s;\t-webkit-transition: all 0.5s;\t-moz-transition: all 0.5s;}.tree li::before, .tree li::after{\tcontent: \'\';\tposition: absolute; top: 0; right: 50%;\tborder-top: 1px solid #ccc;\twidth: 50%; height: 20px;}.tree li::after{\tright: auto; left: 50%;\tborder-left: 1px solid #ccc;}.tree li:only-child::after, .tree li:only-child::before {\tdisplay: none;}.tree li:only-child{ padding-top: 0;}.tree li:first-child::before, .tree li:last-child::after{\tborder: 0 none;}.tree li:last-child::before{\tborder-right: 1px solid #ccc;\tborder-radius: 0 5px 0 0;\t-webkit-border-radius: 0 5px 0 0;\t-moz-border-radius: 0 5px 0 0;}.tree li:first-child::after{\tborder-radius: 5px 0 0 0;\t-webkit-border-radius: 5px 0 0 0;\t-moz-border-radius: 5px 0 0 0;}.tree ul ul::before{\tcontent: \'\';\tposition: absolute; top: 0; left: 50%;\tborder-left: 1px solid #ccc;\twidth: 0; height: 20px;}.tree li a{\tborder: 1px solid #ccc;\tpadding: 10px 10px;\ttext-decoration: none;\tcolor: #666;\tfont-family: arial, verdana, tahoma;\tfont-size: 11px;\tdisplay: inline-block;\t\tborder-radius: 5px;\t-webkit-border-radius: 5px;\t-moz-border-radius: 5px;\t\ttransition: all 0.5s;\t-webkit-transition: all 0.5s;\t-moz-transition: all 0.5s;}.tree li a:hover, .tree li a:hover+ul li a {\tbackground: #4FC4F7; color: white; border: 1px solid #94a0b4;}.tree li a:hover+ul li::after, .tree li a:hover+ul li::before, .tree li a:hover+ul::before, .tree li a:hover+ul ul::before{\tborder-color:  #94a0b4;}img {image-orientation: from-image;}.node{display : inline-block; padding : 10px;}.leafLink{white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 150px; height: 120px;   justify-content: space-around; align-items: center;}.leafBlock{border-color: #bcc6d6;border-style: solid;border-width: 1px; padding : 20px}.profilePic{border-radius:50%;height:70px; width:70px}</style><div class="tree"><ul><li><a href="/#person/2848" class="leafLink"><img src="api/portraits/luffy.jpg" class="profilePic"/><br/>Luffy<br/>President & CEO</a><ul><li><a href="/#person/1918" class="leafLink"><img src="api/portraits/zoro.jpg" class="profilePic"/><br/>Zoro<br/>Managing Director</a><ul><li><a style="background-color:#4FC4F7 !important;color:white;box-shadow: 0 16px 20px 0 rgba(22,118,226,0.3),0 6px 10px 0 rgba(22,118,226,0.3) !important;" href="/#person/143967" class="leafLink"><img src="api/portraits/default.png" class="profilePic"/><br/>Sanji<br/>Vice President</a><ul><li><div class="leafBlock"><div class="node"><a href="/#person/22084" class="leafLink"><img src="api/portraits/27-02-2020-07-10-2120200212_205601.jpg" class="profilePic"/><br/>Brook<br/>Director</a></div><div class="node"><a href="/#person/133886" class="leafLink"><img src="api/portraits/Chopper.jpg" class="profilePic"/><br/>Chopper<br/>Project Manager</a></div><div class="node"><a href="/#person/166195" class="leafLink"><img src="api/portraits/23-12-2021-07-25-09MyProfilePic.webp" class="profilePic"/><br/>Nami<br/>Associate Architect</a></div><div class="node"><a href="/#person/187270" class="leafLink"><img src="api/portraits/default.png" class="profilePic"/><br/>Usopp<br/>Software Engineer</a></div><div class="node"><a href="/#person/1979" class="leafLink"><img src="api/portraits/24-08-2022-06-11-205B4A4141_Edited_BG.jpg" class="profilePic"/><br/>Robin<br/>Technical Manager</a></div></div></li></ul></li></ul></li></ul></li></ul></div>';
        const style = res.split("</style>")[0].substring(7);
        const body = res.split("</style>")[1];
        console.log(style);
        console.log(body);
        setMsg({ res });
      }, []);

      //   const sanitizedData = () => ({
      //     __html: DOMPurify.sanitize(msg.res),
      //   });

      return <div dangerouslySetInnerHTML={{ __html: msg.res }} />;
    }